[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/tobias/Development/TjParser/TigerPython-Parser/tpParser/shared/src/main/scala/tigerpython/inputenc/StringTranslator.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/tobias/Development/TjParser/TigerPython-Parser/tpParser/shared/src/main/scala/tigerpython/inputenc/StringTranslator.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /home/tobias/Development/TjParser/TigerPython-Parser/tpParser/jvm/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.0:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.0:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 58bddacf for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/tobias/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.8/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/tobias/Development/TjParser/TigerPython-Parser/tpParser/jvm/target/scala-2.12/classes:/home/tobias/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.12/3.0.8/scalactic_2.12-3.0.8.jar:/home/tobias/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.8/scala-reflect-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.05768804 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from tigerpython.inputenc.StringTranslator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: tigerpython.inputenc.StringTranslator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(tigerpython.inputenc.StringTranslator)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(tigerpython.inputenc.StringTranslator,ModifiedNames(changes = UsedName(take,[Default]), UsedName(GroupedIterator,[Default]), UsedName(flatMap,[Default]), UsedName(to,[Default]), UsedName(notifyAll,[Default]), UsedName(addString,[Default]), UsedName(size,[Default]), UsedName(toIterator,[Default]), UsedName(patch,[Default]), UsedName(/:,[Default]), UsedName(tigerpython;inputenc;StringTranslator;init;,[Default]), UsedName(hashCode,[Default]), UsedName(sliding,[Default]), UsedName(sameElements,[Default]), UsedName(count,[Default]), UsedName(reversed,[Default]), UsedName(toSeq,[Default]), UsedName(fold,[Default]), UsedName(zip,[Default]), UsedName(length,[Default]), UsedName(buffered,[Default]), UsedName(hasDefiniteSize,[Default]), UsedName(corresponds,[Default]), UsedName($isInstanceOf,[Default]), UsedName(zipAll,[Default]), UsedName(sizeHintIfCheap,[Default]), UsedName(equals,[Default]), UsedName(reduce,[Default]), UsedName(duplicate,[Default]), UsedName(reduceRightOption,[Default]), UsedName(next,[Default]), UsedName(zipWithIndex,[Default]), UsedName(exists,[Default]), UsedName(takeWhile,[Default]), UsedName(==,[Default]), UsedName(copyToArray,[Default]), UsedName(toIterable,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(isInstanceOf,[Default]), UsedName(span,[Default]), UsedName(getClass,[Default]), UsedName(foldLeft,[Default]), UsedName(seq,[Default]), UsedName(nonEmpty,[Default]), UsedName(map,[Default]), UsedName(sliding$default$2,[Default]), UsedName(ne,[Default]), UsedName(scanLeft,[Default]), UsedName(toList,[Default]), UsedName(sum,[Default]), UsedName(slice,[Default]), UsedName(mkString,[Default]), UsedName(:\,[Default]), UsedName(forall,[Default]), UsedName(padTo,[Default]), UsedName(find,[Default]), UsedName(minBy,[Default]), UsedName(toTraversable,[Default]), UsedName(withFilter,[Default]), UsedName(aggregate,[Default]), UsedName(isTraversableAgain,[Default]), UsedName(toSet,[Default]), UsedName(dropWhile,[Default]), UsedName(partition,[Default]), UsedName(contains,[Default]), UsedName(copyToBuffer,[Default]), UsedName(indexOf,[Default]), UsedName(toIndexedSeq,[Default]), UsedName(toVector,[Default]), UsedName(synchronized,[Default]), UsedName(indexWhere,[Default]), UsedName(foldRight,[Default]), UsedName(hasNext,[Default]), UsedName($asInstanceOf,[Default]), UsedName(filter,[Default]), UsedName(collect,[Default]), UsedName($init$,[Default]), UsedName(product,[Default]), UsedName(clone,[Default]), UsedName(max,[Default]), UsedName(toArray,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(StringTranslator,[Default]), UsedName(reduceRight,[Default]), UsedName(toString,[Default]), UsedName(foreach,[Default]), UsedName(sliceIterator,[Default]), UsedName(toStream,[Default]), UsedName(min,[Default]), UsedName(scanRight,[Default]), UsedName(grouped,[Default]), UsedName(toBuffer,[Default]), UsedName(filterNot,[Default]), UsedName(toMap,[Default]), UsedName(maxBy,[Default]), UsedName(reduceLeft,[Default]), UsedName(drop,[Default]), UsedName(source,[Default]), UsedName(++,[Default]), UsedName(reduceLeftOption,[Default]), UsedName(translate,[Default]), UsedName(collectFirst,[Default]), UsedName(isEmpty,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(reduceOption,[Default]))) invalidates 1 classes due to The tigerpython.inputenc.StringTranslator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(take,[Default]), UsedName(GroupedIterator,[Default]), UsedName(flatMap,[Default]), UsedName(to,[Default]), UsedName(notifyAll,[Default]), UsedName(addString,[Default]), UsedName(size,[Default]), UsedName(toIterator,[Default]), UsedName(patch,[Default]), UsedName(/:,[Default]), UsedName(tigerpython;inputenc;StringTranslator;init;,[Default]), UsedName(hashCode,[Default]), UsedName(sliding,[Default]), UsedName(sameElements,[Default]), UsedName(count,[Default]), UsedName(reversed,[Default]), UsedName(toSeq,[Default]), UsedName(fold,[Default]), UsedName(zip,[Default]), UsedName(length,[Default]), UsedName(buffered,[Default]), UsedName(hasDefiniteSize,[Default]), UsedName(corresponds,[Default]), UsedName($isInstanceOf,[Default]), UsedName(zipAll,[Default]), UsedName(sizeHintIfCheap,[Default]), UsedName(equals,[Default]), UsedName(reduce,[Default]), UsedName(duplicate,[Default]), UsedName(reduceRightOption,[Default]), UsedName(next,[Default]), UsedName(zipWithIndex,[Default]), UsedName(exists,[Default]), UsedName(takeWhile,[Default]), UsedName(==,[Default]), UsedName(copyToArray,[Default]), UsedName(toIterable,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(isInstanceOf,[Default]), UsedName(span,[Default]), UsedName(getClass,[Default]), UsedName(foldLeft,[Default]), UsedName(seq,[Default]), UsedName(nonEmpty,[Default]), UsedName(map,[Default]), UsedName(sliding$default$2,[Default]), UsedName(ne,[Default]), UsedName(scanLeft,[Default]), UsedName(toList,[Default]), UsedName(sum,[Default]), UsedName(slice,[Default]), UsedName(mkString,[Default]), UsedName(:\,[Default]), UsedName(forall,[Default]), UsedName(padTo,[Default]), UsedName(find,[Default]), UsedName(minBy,[Default]), UsedName(toTraversable,[Default]), UsedName(withFilter,[Default]), UsedName(aggregate,[Default]), UsedName(isTraversableAgain,[Default]), UsedName(toSet,[Default]), UsedName(dropWhile,[Default]), UsedName(partition,[Default]), UsedName(contains,[Default]), UsedName(copyToBuffer,[Default]), UsedName(indexOf,[Default]), UsedName(toIndexedSeq,[Default]), UsedName(toVector,[Default]), UsedName(synchronized,[Default]), UsedName(indexWhere,[Default]), UsedName(foldRight,[Default]), UsedName(hasNext,[Default]), UsedName($asInstanceOf,[Default]), UsedName(filter,[Default]), UsedName(collect,[Default]), UsedName($init$,[Default]), UsedName(product,[Default]), UsedName(clone,[Default]), UsedName(max,[Default]), UsedName(toArray,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(StringTranslator,[Default]), UsedName(reduceRight,[Default]), UsedName(toString,[Default]), UsedName(foreach,[Default]), UsedName(sliceIterator,[Default]), UsedName(toStream,[Default]), UsedName(min,[Default]), UsedName(scanRight,[Default]), UsedName(grouped,[Default]), UsedName(toBuffer,[Default]), UsedName(filterNot,[Default]), UsedName(toMap,[Default]), UsedName(maxBy,[Default]), UsedName(reduceLeft,[Default]), UsedName(drop,[Default]), UsedName(source,[Default]), UsedName(++,[Default]), UsedName(reduceLeftOption,[Default]), UsedName(translate,[Default]), UsedName(collectFirst,[Default]), UsedName(isEmpty,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]), UsedName(reduceOption,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(tigerpython.inputenc.StringTranslator)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from tigerpython.inputenc.StringTranslator.StringMode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: tigerpython.inputenc.StringTranslator.StringMode[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(tigerpython.inputenc.StringTranslator.StringMode)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(tigerpython.inputenc.StringTranslator.StringMode,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(Value,[Default]), UsedName(maxId,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(nextName,[Default]), UsedName(withName,[Default]), UsedName(SINGLE,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(DOUBLE,[Default]), UsedName(StringMode,[Default]), UsedName(ne,[Default]), UsedName(DOUBLE_TRIPLE,[Default]), UsedName(NONE,[Default]), UsedName(readResolve,[Default]), UsedName(ValueOrdering,[Default]), UsedName(nextId,[Default]), UsedName(SINGLE_TRIPLE,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(Val,[Default]), UsedName(!=,[Default]), UsedName(ValueSet,[Default]), UsedName(toString,[Default]), UsedName(values,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The tigerpython.inputenc.StringTranslator.StringMode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(Value,[Default]), UsedName(maxId,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(nextName,[Default]), UsedName(withName,[Default]), UsedName(SINGLE,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(DOUBLE,[Default]), UsedName(StringMode,[Default]), UsedName(ne,[Default]), UsedName(DOUBLE_TRIPLE,[Default]), UsedName(NONE,[Default]), UsedName(readResolve,[Default]), UsedName(ValueOrdering,[Default]), UsedName(nextId,[Default]), UsedName(SINGLE_TRIPLE,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(Val,[Default]), UsedName(!=,[Default]), UsedName(ValueSet,[Default]), UsedName(toString,[Default]), UsedName(values,[Default]), UsedName(finalize,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(tigerpython.inputenc.StringTranslator.StringMode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
